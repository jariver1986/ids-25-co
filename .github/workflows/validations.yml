name: Validations

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  verifications:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # --- Formato (pre-commit) ---
      - name: Install pre-commit
        run: python -m pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

      # --- Tests + Cobertura (gcov + gcovr) ---
      - name: Install Ceedling
        run: gem install ceedling
      - name: Install gcovr
        run: python -m pip install gcovr
      - name: Run Unit Tests with Coverage
        run: ceedling clobber gcov:all

      # --- Artefactos Ãºtiles para depurar ---
      - name: Upload Ceedling artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ceedling-artifacts
          path: |
            build/artifacts/**/*
          if-no-files-found: warn

      # --- Reporte de resultados JUnit (Action check) ---
      - name: Test Results Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Ceedling Unit Tests
          #path: build/artifacts/test/junit_tests_report.xml
          path: build/**/junit*_report.xml
          reporter: java-junit

      # --- Resumen de cobertura en el Job Summary y PR ---
      - name: Code Coverage Summary
        if: always()
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/artifacts/gcov/gcovr/GcovCoverageCobertura.xml
          badge: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "75 90"

      - name: Output to Job Summary
        if: always()
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Add Coverage PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md
